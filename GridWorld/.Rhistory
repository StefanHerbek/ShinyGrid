shade  <- as.data.frame(shade)
ggplot() + xlim(xlim) + ylim(ylim) +
geom_line(aes(lamda, prior), colour = "#E69F00") +
geom_line(aes(lamda, likelihood), colour = "#56B4E9") +
geom_line(aes(lamda, posterior), colour = "#009E73") +
geom_segment(aes(x=qs[1],y=0,xend=qs[1],yend=ytopl)) +
geom_segment(aes(x=qs[2],y=0,xend=qs[2],yend=ytopu))
#First subst the data and add the coordinates to make it shade to y = 0
#     shade <- rbind(c(0.12,0), subset(MyDF, x > 0.12), c(MyDF[nrow(MyDF), "X"], 0))
#
#     #Then use this new data.frame with geom_polygon
#     p + geom_segment(aes(x=0.12,y=0,xend=0.12,yend=ytop)) +
#       geom_polygon(data = shade, aes(x, y))
#     plot(0,0,type="n",xlab="lamda",ylab="",ylim=ylim,xlim=xlim)
#     lines(lamda,prior,col=2)
#     lines(lamda,likelihood,col=3)
#     lines(lamda,posterior,col=1,lwd=2)
#     abline(v=qs, lwd = 2, lty = 2, col = "blue")
#     legend("topright",c("prior","likelihood","posterior", "95% CI"),
#            col=c(2,3,1,4),lwd=c(1,1,2,2),inset=0.01,cex=1.2, lty = c(1,1,1,2))
}
plots(.2,.2,5,20)
plots <- function(a,b,m,n){
lamda <- seq(0.01, (1/m) + 1 + .5*(1/m) , 0.01)  #
prior <- dgamma(lamda, a, b)
logLikelihood <- n*log(lamda) - (lamda)*n*m
posterior <- dgamma(lamda,((a+n)),((b+n*(m))))
qs <- c(qgamma(.025,((a+n)),((b+n*(m)))), qgamma(.975,((a+n)),((b+n*(m)))))
s <- (a+n)/(b+n*(m))
ytopl <- dgamma(qs[1],((a+n)),((b+n*(m))))
ytopu <- dgamma(qs[2],((a+n)),((b+n*(m))))
qsl <- round(qs[1], digits = 4)
qsu <- round(qs[2], digits = 4)
s <- round(s, digits = 4)
xll <- function(w){
exp(n - n*log(1/m) + n*log(w) - (w)*n*m)
}
stan <- integrate(xll, .01, (1/m) + 1 + .5*(1/m))
likelihood <- (exp(n - n*log(1/m) + logLikelihood)) / stan[[1]]
ylim<-c(0,max(c(likelihood,posterior)))
xlim <- c(0,max(lamda))
#
#   print(lamda)
#   print(which(lamda < qs[2]))
#   print(which(lamda > qs[1]))
shade <- rbind(c(qs[1],0),
c(lamda[13:29], posterior[13:29]),
c(qs[2], 0))
shade  <- as.data.frame(shade)
ggplot() + xlim(xlim) + ylim(ylim) +
geom_line(aes(lamda, prior), colour = "#E69F00") +
geom_line(aes(lamda, likelihood), colour = "#56B4E9") +
geom_line(aes(lamda, posterior), colour = "#009E73") +
geom_segment(aes(x=qs[1],y=0,xend=qs[1],yend=ytopl)) +
geom_segment(aes(x=qs[2],y=0,xend=qs[2],yend=ytopu)) +
geom_polygon(aes(shade[,1], shade[,2]))
#First subst the data and add the coordinates to make it shade to y = 0
#     shade <- rbind(c(0.12,0), subset(MyDF, x > 0.12), c(MyDF[nrow(MyDF), "X"], 0))
#
#     #Then use this new data.frame with geom_polygon
#     p + geom_segment(aes(x=0.12,y=0,xend=0.12,yend=ytop)) +
#       geom_polygon(data = shade, aes(x, y))
#     plot(0,0,type="n",xlab="lamda",ylab="",ylim=ylim,xlim=xlim)
#     lines(lamda,prior,col=2)
#     lines(lamda,likelihood,col=3)
#     lines(lamda,posterior,col=1,lwd=2)
#     abline(v=qs, lwd = 2, lty = 2, col = "blue")
#     legend("topright",c("prior","likelihood","posterior", "95% CI"),
#            col=c(2,3,1,4),lwd=c(1,1,2,2),inset=0.01,cex=1.2, lty = c(1,1,1,2))
}
plots(.2,.2,5,20)
plots <- function(a,b,m,n){
lamda <- seq(0.01, (1/m) + 1 + .5*(1/m) , 0.01)  #
prior <- dgamma(lamda, a, b)
logLikelihood <- n*log(lamda) - (lamda)*n*m
posterior <- dgamma(lamda,((a+n)),((b+n*(m))))
qs <- c(qgamma(.025,((a+n)),((b+n*(m)))), qgamma(.975,((a+n)),((b+n*(m)))))
s <- (a+n)/(b+n*(m))
ytopl <- dgamma(qs[1],((a+n)),((b+n*(m))))
ytopu <- dgamma(qs[2],((a+n)),((b+n*(m))))
qsl <- round(qs[1], digits = 4)
qsu <- round(qs[2], digits = 4)
s <- round(s, digits = 4)
xll <- function(w){
exp(n - n*log(1/m) + n*log(w) - (w)*n*m)
}
stan <- integrate(xll, .01, (1/m) + 1 + .5*(1/m))
likelihood <- (exp(n - n*log(1/m) + logLikelihood)) / stan[[1]]
ylim<-c(0,max(c(likelihood,posterior)))
xlim <- c(0,max(lamda))
#
#   print(lamda)
#   print(which(lamda < qs[2]))
#   print(which(lamda > qs[1]))
print(nrow(posterior))
shade <- rbind(c(qs[1],0),
c(lamda[13:29], posterior[13:29]),
c(qs[2], 0))
shade  <- as.data.frame(shade)
ggplot() + xlim(xlim) + ylim(ylim) +
geom_line(aes(lamda, prior), colour = "#E69F00") +
geom_line(aes(lamda, likelihood), colour = "#56B4E9") +
geom_line(aes(lamda, posterior), colour = "#009E73") +
geom_segment(aes(x=qs[1],y=0,xend=qs[1],yend=ytopl)) +
geom_segment(aes(x=qs[2],y=0,xend=qs[2],yend=ytopu)) +
geom_polygon(aes(shade[,1], shade[,2]))
#First subst the data and add the coordinates to make it shade to y = 0
#     shade <- rbind(c(0.12,0), subset(MyDF, x > 0.12), c(MyDF[nrow(MyDF), "X"], 0))
#
#     #Then use this new data.frame with geom_polygon
#     p + geom_segment(aes(x=0.12,y=0,xend=0.12,yend=ytop)) +
#       geom_polygon(data = shade, aes(x, y))
#     plot(0,0,type="n",xlab="lamda",ylab="",ylim=ylim,xlim=xlim)
#     lines(lamda,prior,col=2)
#     lines(lamda,likelihood,col=3)
#     lines(lamda,posterior,col=1,lwd=2)
#     abline(v=qs, lwd = 2, lty = 2, col = "blue")
#     legend("topright",c("prior","likelihood","posterior", "95% CI"),
#            col=c(2,3,1,4),lwd=c(1,1,2,2),inset=0.01,cex=1.2, lty = c(1,1,1,2))
}
plots(.2,.2,5,20)
plots <- function(a,b,m,n){
lamda <- seq(0.01, (1/m) + 1 + .5*(1/m) , 0.01)  #
prior <- dgamma(lamda, a, b)
logLikelihood <- n*log(lamda) - (lamda)*n*m
posterior <- dgamma(lamda,((a+n)),((b+n*(m))))
qs <- c(qgamma(.025,((a+n)),((b+n*(m)))), qgamma(.975,((a+n)),((b+n*(m)))))
s <- (a+n)/(b+n*(m))
ytopl <- dgamma(qs[1],((a+n)),((b+n*(m))))
ytopu <- dgamma(qs[2],((a+n)),((b+n*(m))))
qsl <- round(qs[1], digits = 4)
qsu <- round(qs[2], digits = 4)
s <- round(s, digits = 4)
xll <- function(w){
exp(n - n*log(1/m) + n*log(w) - (w)*n*m)
}
stan <- integrate(xll, .01, (1/m) + 1 + .5*(1/m))
likelihood <- (exp(n - n*log(1/m) + logLikelihood)) / stan[[1]]
ylim<-c(0,max(c(likelihood,posterior)))
xlim <- c(0,max(lamda))
#
#   print(lamda)
#   print(which(lamda < qs[2]))
#   print(which(lamda > qs[1]))
print(length(posterior))
shade <- rbind(c(qs[1],0),
c(lamda[13:29], posterior[13:29]),
c(qs[2], 0))
shade  <- as.data.frame(shade)
ggplot() + xlim(xlim) + ylim(ylim) +
geom_line(aes(lamda, prior), colour = "#E69F00") +
geom_line(aes(lamda, likelihood), colour = "#56B4E9") +
geom_line(aes(lamda, posterior), colour = "#009E73") +
geom_segment(aes(x=qs[1],y=0,xend=qs[1],yend=ytopl)) +
geom_segment(aes(x=qs[2],y=0,xend=qs[2],yend=ytopu)) +
geom_polygon(aes(shade[,1], shade[,2]))
#First subst the data and add the coordinates to make it shade to y = 0
#     shade <- rbind(c(0.12,0), subset(MyDF, x > 0.12), c(MyDF[nrow(MyDF), "X"], 0))
#
#     #Then use this new data.frame with geom_polygon
#     p + geom_segment(aes(x=0.12,y=0,xend=0.12,yend=ytop)) +
#       geom_polygon(data = shade, aes(x, y))
#     plot(0,0,type="n",xlab="lamda",ylab="",ylim=ylim,xlim=xlim)
#     lines(lamda,prior,col=2)
#     lines(lamda,likelihood,col=3)
#     lines(lamda,posterior,col=1,lwd=2)
#     abline(v=qs, lwd = 2, lty = 2, col = "blue")
#     legend("topright",c("prior","likelihood","posterior", "95% CI"),
#            col=c(2,3,1,4),lwd=c(1,1,2,2),inset=0.01,cex=1.2, lty = c(1,1,1,2))
}
plots(.2,.2,5,20)
plots <- function(a,b,m,n){
lamda <- seq(0.01, (1/m) + 1 + .5*(1/m) , 0.01)  #
prior <- dgamma(lamda, a, b)
logLikelihood <- n*log(lamda) - (lamda)*n*m
posterior <- dgamma(lamda,((a+n)),((b+n*(m))))
qs <- c(qgamma(.025,((a+n)),((b+n*(m)))), qgamma(.975,((a+n)),((b+n*(m)))))
s <- (a+n)/(b+n*(m))
ytopl <- dgamma(qs[1],((a+n)),((b+n*(m))))
ytopu <- dgamma(qs[2],((a+n)),((b+n*(m))))
qsl <- round(qs[1], digits = 4)
qsu <- round(qs[2], digits = 4)
s <- round(s, digits = 4)
xll <- function(w){
exp(n - n*log(1/m) + n*log(w) - (w)*n*m)
}
stan <- integrate(xll, .01, (1/m) + 1 + .5*(1/m))
likelihood <- (exp(n - n*log(1/m) + logLikelihood)) / stan[[1]]
ylim<-c(0,max(c(likelihood,posterior)))
xlim <- c(0,max(lamda))
#
#   print(lamda)
#   print(which(lamda < qs[2]))
#   print(which(lamda > qs[1]))
print(posterior[13:29])
shade <- rbind(c(qs[1],0),
c(lamda[13:29], posterior[13:29]),
c(qs[2], 0))
shade  <- as.data.frame(shade)
ggplot() + xlim(xlim) + ylim(ylim) +
geom_line(aes(lamda, prior), colour = "#E69F00") +
geom_line(aes(lamda, likelihood), colour = "#56B4E9") +
geom_line(aes(lamda, posterior), colour = "#009E73") +
geom_segment(aes(x=qs[1],y=0,xend=qs[1],yend=ytopl)) +
geom_segment(aes(x=qs[2],y=0,xend=qs[2],yend=ytopu)) +
geom_polygon(aes(shade[,1], shade[,2]))
#First subst the data and add the coordinates to make it shade to y = 0
#     shade <- rbind(c(0.12,0), subset(MyDF, x > 0.12), c(MyDF[nrow(MyDF), "X"], 0))
#
#     #Then use this new data.frame with geom_polygon
#     p + geom_segment(aes(x=0.12,y=0,xend=0.12,yend=ytop)) +
#       geom_polygon(data = shade, aes(x, y))
#     plot(0,0,type="n",xlab="lamda",ylab="",ylim=ylim,xlim=xlim)
#     lines(lamda,prior,col=2)
#     lines(lamda,likelihood,col=3)
#     lines(lamda,posterior,col=1,lwd=2)
#     abline(v=qs, lwd = 2, lty = 2, col = "blue")
#     legend("topright",c("prior","likelihood","posterior", "95% CI"),
#            col=c(2,3,1,4),lwd=c(1,1,2,2),inset=0.01,cex=1.2, lty = c(1,1,1,2))
}
plots(.2,.2,5,20)
plots <- function(a,b,m,n){
lamda <- seq(0.01, (1/m) + 1 + .5*(1/m) , 0.01)  #
prior <- dgamma(lamda, a, b)
logLikelihood <- n*log(lamda) - (lamda)*n*m
posterior <- dgamma(lamda,((a+n)),((b+n*(m))))
qs <- c(qgamma(.025,((a+n)),((b+n*(m)))), qgamma(.975,((a+n)),((b+n*(m)))))
s <- (a+n)/(b+n*(m))
ytopl <- dgamma(qs[1],((a+n)),((b+n*(m))))
ytopu <- dgamma(qs[2],((a+n)),((b+n*(m))))
qsl <- round(qs[1], digits = 4)
qsu <- round(qs[2], digits = 4)
s <- round(s, digits = 4)
xll <- function(w){
exp(n - n*log(1/m) + n*log(w) - (w)*n*m)
}
stan <- integrate(xll, .01, (1/m) + 1 + .5*(1/m))
likelihood <- (exp(n - n*log(1/m) + logLikelihood)) / stan[[1]]
ylim<-c(0,max(c(likelihood,posterior)))
xlim <- c(0,max(lamda))
#
#   print(lamda)
#   print(which(lamda < qs[2]))
#   print(which(lamda > qs[1]))
shade <- rbind(c(qs[1],0),
c(lamda[13:29], posterior[13:29]),
c(qs[2], 0))
shade  <- as.data.frame(shade)
print(shade)
ggplot() + xlim(xlim) + ylim(ylim) +
geom_line(aes(lamda, prior), colour = "#E69F00") +
geom_line(aes(lamda, likelihood), colour = "#56B4E9") +
geom_line(aes(lamda, posterior), colour = "#009E73") +
geom_segment(aes(x=qs[1],y=0,xend=qs[1],yend=ytopl)) +
geom_segment(aes(x=qs[2],y=0,xend=qs[2],yend=ytopu)) +
geom_polygon(aes(shade[,1], shade[,2]))
#First subst the data and add the coordinates to make it shade to y = 0
#     shade <- rbind(c(0.12,0), subset(MyDF, x > 0.12), c(MyDF[nrow(MyDF), "X"], 0))
#
#     #Then use this new data.frame with geom_polygon
#     p + geom_segment(aes(x=0.12,y=0,xend=0.12,yend=ytop)) +
#       geom_polygon(data = shade, aes(x, y))
#     plot(0,0,type="n",xlab="lamda",ylab="",ylim=ylim,xlim=xlim)
#     lines(lamda,prior,col=2)
#     lines(lamda,likelihood,col=3)
#     lines(lamda,posterior,col=1,lwd=2)
#     abline(v=qs, lwd = 2, lty = 2, col = "blue")
#     legend("topright",c("prior","likelihood","posterior", "95% CI"),
#            col=c(2,3,1,4),lwd=c(1,1,2,2),inset=0.01,cex=1.2, lty = c(1,1,1,2))
}
plots(.2,.2,5,20)
plots <- function(a,b,m,n){
lamda <- seq(0.01, (1/m) + 1 + .5*(1/m) , 0.01)  #
prior <- dgamma(lamda, a, b)
logLikelihood <- n*log(lamda) - (lamda)*n*m
posterior <- dgamma(lamda,((a+n)),((b+n*(m))))
qs <- c(qgamma(.025,((a+n)),((b+n*(m)))), qgamma(.975,((a+n)),((b+n*(m)))))
s <- (a+n)/(b+n*(m))
ytopl <- dgamma(qs[1],((a+n)),((b+n*(m))))
ytopu <- dgamma(qs[2],((a+n)),((b+n*(m))))
qsl <- round(qs[1], digits = 4)
qsu <- round(qs[2], digits = 4)
s <- round(s, digits = 4)
xll <- function(w){
exp(n - n*log(1/m) + n*log(w) - (w)*n*m)
}
stan <- integrate(xll, .01, (1/m) + 1 + .5*(1/m))
likelihood <- (exp(n - n*log(1/m) + logLikelihood)) / stan[[1]]
ylim<-c(0,max(c(likelihood,posterior)))
xlim <- c(0,max(lamda))
#
#   print(lamda)
#   print(which(lamda < qs[2]))
#   print(which(lamda > qs[1]))
shade <- rbind(c(qs[1],0),
cbind(lamda[13:29], posterior[13:29]),
c(qs[2], 0))
shade  <- as.data.frame(shade)
print(shade)
ggplot() + xlim(xlim) + ylim(ylim) +
geom_line(aes(lamda, prior), colour = "#E69F00") +
geom_line(aes(lamda, likelihood), colour = "#56B4E9") +
geom_line(aes(lamda, posterior), colour = "#009E73") +
geom_segment(aes(x=qs[1],y=0,xend=qs[1],yend=ytopl)) +
geom_segment(aes(x=qs[2],y=0,xend=qs[2],yend=ytopu)) +
geom_polygon(aes(shade[,1], shade[,2]))
#First subst the data and add the coordinates to make it shade to y = 0
#     shade <- rbind(c(0.12,0), subset(MyDF, x > 0.12), c(MyDF[nrow(MyDF), "X"], 0))
#
#     #Then use this new data.frame with geom_polygon
#     p + geom_segment(aes(x=0.12,y=0,xend=0.12,yend=ytop)) +
#       geom_polygon(data = shade, aes(x, y))
#     plot(0,0,type="n",xlab="lamda",ylab="",ylim=ylim,xlim=xlim)
#     lines(lamda,prior,col=2)
#     lines(lamda,likelihood,col=3)
#     lines(lamda,posterior,col=1,lwd=2)
#     abline(v=qs, lwd = 2, lty = 2, col = "blue")
#     legend("topright",c("prior","likelihood","posterior", "95% CI"),
#            col=c(2,3,1,4),lwd=c(1,1,2,2),inset=0.01,cex=1.2, lty = c(1,1,1,2))
}
plots(.2,.2,5,20)
plots <- function(a,b,m,n){
lamda <- seq(0.01, (1/m) + 1 + .5*(1/m) , 0.01)  #
prior <- dgamma(lamda, a, b)
logLikelihood <- n*log(lamda) - (lamda)*n*m
posterior <- dgamma(lamda,((a+n)),((b+n*(m))))
qs <- c(qgamma(.025,((a+n)),((b+n*(m)))), qgamma(.975,((a+n)),((b+n*(m)))))
s <- (a+n)/(b+n*(m))
ytopl <- dgamma(qs[1],((a+n)),((b+n*(m))))
ytopu <- dgamma(qs[2],((a+n)),((b+n*(m))))
qsl <- round(qs[1], digits = 4)
qsu <- round(qs[2], digits = 4)
s <- round(s, digits = 4)
xll <- function(w){
exp(n - n*log(1/m) + n*log(w) - (w)*n*m)
}
stan <- integrate(xll, .01, (1/m) + 1 + .5*(1/m))
likelihood <- (exp(n - n*log(1/m) + logLikelihood)) / stan[[1]]
ylim<-c(0,max(c(likelihood,posterior)))
xlim <- c(0,max(lamda))
#
#   print(lamda)
#   print(which(lamda < qs[2]))
#   print(which(lamda > qs[1]))
lower <- min(lamda[which(lamda>qs[1])])
upper <- max(lamda[which(lamda<qs[2])])
shade <- rbind(c(qs[1],0),
cbind(lamda[lower:upper], posterior[lower:upper]),
c(qs[2], 0))
shade  <- as.data.frame(shade)
print(shade)
ggplot() + xlim(xlim) + ylim(ylim) +
geom_line(aes(lamda, prior), colour = "#E69F00") +
geom_line(aes(lamda, likelihood), colour = "#56B4E9") +
geom_line(aes(lamda, posterior), colour = "#009E73") +
geom_segment(aes(x=qs[1],y=0,xend=qs[1],yend=ytopl)) +
geom_segment(aes(x=qs[2],y=0,xend=qs[2],yend=ytopu)) +
geom_polygon(aes(shade[,1], shade[,2]))
#First subst the data and add the coordinates to make it shade to y = 0
#     shade <- rbind(c(0.12,0), subset(MyDF, x > 0.12), c(MyDF[nrow(MyDF), "X"], 0))
#
#     #Then use this new data.frame with geom_polygon
#     p + geom_segment(aes(x=0.12,y=0,xend=0.12,yend=ytop)) +
#       geom_polygon(data = shade, aes(x, y))
#     plot(0,0,type="n",xlab="lamda",ylab="",ylim=ylim,xlim=xlim)
#     lines(lamda,prior,col=2)
#     lines(lamda,likelihood,col=3)
#     lines(lamda,posterior,col=1,lwd=2)
#     abline(v=qs, lwd = 2, lty = 2, col = "blue")
#     legend("topright",c("prior","likelihood","posterior", "95% CI"),
#            col=c(2,3,1,4),lwd=c(1,1,2,2),inset=0.01,cex=1.2, lty = c(1,1,1,2))
}
plots(.2,.2,5,20)
plots <- function(a,b,m,n){
lamda <- seq(0.01, (1/m) + 1 + .5*(1/m) , 0.01)  #
prior <- dgamma(lamda, a, b)
logLikelihood <- n*log(lamda) - (lamda)*n*m
posterior <- dgamma(lamda,((a+n)),((b+n*(m))))
qs <- c(qgamma(.025,((a+n)),((b+n*(m)))), qgamma(.975,((a+n)),((b+n*(m)))))
s <- (a+n)/(b+n*(m))
ytopl <- dgamma(qs[1],((a+n)),((b+n*(m))))
ytopu <- dgamma(qs[2],((a+n)),((b+n*(m))))
qsl <- round(qs[1], digits = 4)
qsu <- round(qs[2], digits = 4)
s <- round(s, digits = 4)
xll <- function(w){
exp(n - n*log(1/m) + n*log(w) - (w)*n*m)
}
stan <- integrate(xll, .01, (1/m) + 1 + .5*(1/m))
likelihood <- (exp(n - n*log(1/m) + logLikelihood)) / stan[[1]]
ylim<-c(0,max(c(likelihood,posterior)))
xlim <- c(0,max(lamda))
#
#   print(lamda)
#   print(which(lamda < qs[2]))
#   print(which(lamda > qs[1]))
lower <- min(lamda[which(lamda>qs[1])])
upper <- max(lamda[which(lamda<qs[2])])
shade <- rbind(c(qs[1],0),
cbind(lamda[lower:upper], posterior[lower:upper]),
c(qs[2], 0))
shade  <- as.data.frame(shade)
print(lamda[which(lamda>qs[1])])
ggplot() + xlim(xlim) + ylim(ylim) +
geom_line(aes(lamda, prior), colour = "#E69F00") +
geom_line(aes(lamda, likelihood), colour = "#56B4E9") +
geom_line(aes(lamda, posterior), colour = "#009E73") +
geom_segment(aes(x=qs[1],y=0,xend=qs[1],yend=ytopl)) +
geom_segment(aes(x=qs[2],y=0,xend=qs[2],yend=ytopu)) +
geom_polygon(aes(shade[,1], shade[,2]))
#First subst the data and add the coordinates to make it shade to y = 0
#     shade <- rbind(c(0.12,0), subset(MyDF, x > 0.12), c(MyDF[nrow(MyDF), "X"], 0))
#
#     #Then use this new data.frame with geom_polygon
#     p + geom_segment(aes(x=0.12,y=0,xend=0.12,yend=ytop)) +
#       geom_polygon(data = shade, aes(x, y))
#     plot(0,0,type="n",xlab="lamda",ylab="",ylim=ylim,xlim=xlim)
#     lines(lamda,prior,col=2)
#     lines(lamda,likelihood,col=3)
#     lines(lamda,posterior,col=1,lwd=2)
#     abline(v=qs, lwd = 2, lty = 2, col = "blue")
#     legend("topright",c("prior","likelihood","posterior", "95% CI"),
#            col=c(2,3,1,4),lwd=c(1,1,2,2),inset=0.01,cex=1.2, lty = c(1,1,1,2))
}
plots(.2,.2,5,20)
plots <- function(a,b,m,n){
lamda <- seq(0.01, (1/m) + 1 + .5*(1/m) , 0.01)  #
prior <- dgamma(lamda, a, b)
logLikelihood <- n*log(lamda) - (lamda)*n*m
posterior <- dgamma(lamda,((a+n)),((b+n*(m))))
qs <- c(qgamma(.025,((a+n)),((b+n*(m)))), qgamma(.975,((a+n)),((b+n*(m)))))
s <- (a+n)/(b+n*(m))
ytopl <- dgamma(qs[1],((a+n)),((b+n*(m))))
ytopu <- dgamma(qs[2],((a+n)),((b+n*(m))))
qsl <- round(qs[1], digits = 4)
qsu <- round(qs[2], digits = 4)
s <- round(s, digits = 4)
xll <- function(w){
exp(n - n*log(1/m) + n*log(w) - (w)*n*m)
}
stan <- integrate(xll, .01, (1/m) + 1 + .5*(1/m))
likelihood <- (exp(n - n*log(1/m) + logLikelihood)) / stan[[1]]
ylim<-c(0,max(c(likelihood,posterior)))
xlim <- c(0,max(lamda))
#
#   print(lamda)
#   print(which(lamda < qs[2]))
#   print(which(lamda > qs[1]))
lower <- min(which(lamda>qs[1]))
upper <- max(which(lamda<qs[2]))
shade <- rbind(c(qs[1],0),
cbind(lamda[lower:upper], posterior[lower:upper]),
c(qs[2], 0))
shade  <- as.data.frame(shade)
print(lamda[which(lamda>qs[1])])
ggplot() + xlim(xlim) + ylim(ylim) +
geom_line(aes(lamda, prior), colour = "#E69F00") +
geom_line(aes(lamda, likelihood), colour = "#56B4E9") +
geom_line(aes(lamda, posterior), colour = "#009E73") +
geom_segment(aes(x=qs[1],y=0,xend=qs[1],yend=ytopl)) +
geom_segment(aes(x=qs[2],y=0,xend=qs[2],yend=ytopu)) +
geom_polygon(aes(shade[,1], shade[,2]))
#First subst the data and add the coordinates to make it shade to y = 0
#     shade <- rbind(c(0.12,0), subset(MyDF, x > 0.12), c(MyDF[nrow(MyDF), "X"], 0))
#
#     #Then use this new data.frame with geom_polygon
#     p + geom_segment(aes(x=0.12,y=0,xend=0.12,yend=ytop)) +
#       geom_polygon(data = shade, aes(x, y))
#     plot(0,0,type="n",xlab="lamda",ylab="",ylim=ylim,xlim=xlim)
#     lines(lamda,prior,col=2)
#     lines(lamda,likelihood,col=3)
#     lines(lamda,posterior,col=1,lwd=2)
#     abline(v=qs, lwd = 2, lty = 2, col = "blue")
#     legend("topright",c("prior","likelihood","posterior", "95% CI"),
#            col=c(2,3,1,4),lwd=c(1,1,2,2),inset=0.01,cex=1.2, lty = c(1,1,1,2))
}
plots(.2,.2,5,20)
shiny::runApp('C:/Users/gilman/Desktop/Shiny/ExpoGamma')
?geom_polygon
shiny::runApp('C:/Users/gilman/Desktop/Shiny/ExpoGamma')
shiny::runApp('C:/Users/gilman/Desktop/Shiny/ExpoGamma')
shiny::runApp('C:/Users/gilman/Desktop/Shiny/ExpoGamma')
shiny::runApp('C:/Users/gilman/Desktop/Shiny/ExpoGamma')
shiny::runApp('C:/Users/gilman/Desktop/Shiny/ExpoGamma')
shiny::runApp('C:/Users/gilman/Desktop/Shiny/ExpoGamma')
shiny::runApp('C:/Users/gilman/Desktop/Shiny/ExpoGamma')
shiny::runApp('C:/Users/gilman/Desktop/Shiny/ExpoGamma')
shiny::runApp('C:/Users/gilman/Desktop/Shiny/ExpoGamma')
shiny::runApp('C:/Users/gilman/Desktop/Shiny/ExpoGamma')
shiny::runApp('C:/Users/gilman/Desktop/Shiny/ExpoGamma')
shiny::runApp('C:/Users/gilman/Desktop/Shiny/ExpoGamma')
shiny::runApp('C:/Users/gilman/Desktop/Shiny/ExpoGamma')
shiny::runApp('C:/Users/gilman/Desktop/Shiny/ExpoGamma')
shiny::runApp('C:/Users/gilman/Desktop/Shiny/ExpoGamma')
shiny::runApp('C:/Users/gilman/Desktop/Shiny/ExpoGamma')
shiny::runApp('C:/Users/gilman/Desktop/Shiny/ExpoGamma')
shiny::runApp('C:/Users/gilman/Desktop/Shiny/BasicBayes')
shiny::runApp('C:/Users/gilman/Desktop/Shiny/BasicBayes')
shiny::runApp('C:/Users/gilman/Desktop/Shiny/BetaBinomial')
shiny::runApp('C:/Users/gilman/Desktop/Shiny/BetaBinomial')
setwd("~/GitHub/ShinyGrid/GridWorld")
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
